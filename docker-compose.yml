services:
  database:
    image: postgres:latest
    container_name: database
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prod_network

  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - prod_network
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - prod_network
    restart: unless-stopped

networks:
  prod_network:
    driver: bridge

volumes:
  postgres_data: